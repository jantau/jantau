text = ~ symbol,
marker = list(size = 7),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = test[test$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size = 7, symbol = "102"),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
plot_ly() %>%
add_markers(
data = test[test$Sektor != "Energie",],
x = ~ rank,
y = ~ adj_perc,
color = ~ Sektor,
colors = gray.colors(9, rev = TRUE),
text = ~ symbol,
marker = list(size = 7),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = test[test$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size = 7, symbol = "square"),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
plot_ly() %>%
add_markers(
data = test[test$Sektor != "Energie",],
x = ~ rank,
y = ~ adj_perc,
color = ~ Sektor,
colors = gray.colors(9, rev = TRUE),
text = ~ symbol,
marker = list(size = 7),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = test[test$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size = 7, symbol = "square-open"),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
plot_ly() %>%
add_markers(
data = test[test$Sektor != "Energie",],
x = ~ rank,
y = ~ adj_perc,
color = ~ Sektor,
colors = gray.colors(9, rev = TRUE),
text = ~ symbol,
marker = list(size = 7),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = test[test$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size = 7, symbol = "star-square-open"),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
plot_ly() %>%
add_markers(
data = test[test$Sektor != "Energie",],
x = ~ rank,
y = ~ adj_perc,
color = ~ Sektor,
colors = gray.colors(9, rev = TRUE),
text = ~ symbol,
marker = list(size = 7),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = test[test$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size =8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
plot_ly() %>%
add_markers(
data = test[test$Sektor != "Energie",],
x = ~ rank,
y = ~ adj_perc,
color = ~ Sektor,
colors = gray.colors(9, rev = TRUE),
text = ~ symbol,
marker = list(size = 8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = test[test$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size = 8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
blogdown::new_post("energie-sektor", ext = ".md")
save(xetra_df, file = "xetra_df.Rdata")
setwd("/Users/jan/blog/jantau/content/post/2022-02-12-die-beliebtesten-etfs-2021")
save(xetra_df, file = "xetra_df.Rdata")
setwd("/Users/jan/blog/jantau/content/post/2022-03-26-energie-sektor")
load("/Users/jan/blog/jantau/content/post/2022-02-12-die-beliebtesten-etfs-2021/xetra_df.Rdata")
# Plot data
hovertext <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %"
)
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:10pt'>Sektoren-ETFs von Xtrackers MSCI World im Q1 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed"))
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:10pt'>Sektoren-ETFs von Xtrackers MSCI World im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed"))
missing_tickers <- ishares_msci_world_top_10 %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol), by ("Emittententicker" = "symbol"))
missing_tickers <- ishares_msci_world_top_10 %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price, by ("Emittententicker" = "symbol"))
missing_tickers <- ishares_msci_world_top_10 %>%
select(Emittententicker)
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price  %>% select(symbol), by ("Emittententicker" = "symbol"))
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker)
View(missing_tickers)
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price  %>% ungroup() %>% select(symbol), by ("Emittententicker" = "symbol"))
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price, by ("Emittententicker" = "symbol"))
View(ishares_msci_world_top_10_price)
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price, by ("Emittententicker" = "symbol"))
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price, by ("Emittententicker" = "symbol"))
missing_tickers <-
ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price, by ("Emittententicker" = "symbol"))
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol), by = ("Emittententicker" = "symbol"))
ishares_msci_world_top_10_price %>% select(symbol)
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = ("Emittententicker" = "symbol"))
ishares_msci_world_top_10_price %>% select(symbol) %>% distinct()
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price, by = ("Emittententicker" = "symbol"))
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"))
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"), keep = TRUE)
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"), keep = TRUE) %>%
filter(symbol == NA)
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"), keep = TRUE) %>%
filter(symbol == is.na)
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"), keep = TRUE) %>%
filter(symbol == is.na())
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"), keep = TRUE) %>%
filter(is.na(symbol))
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker)
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker, Name) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"), keep = TRUE) %>%
filter(is.na(symbol))
missing_tickers
list <- list("BP." = "BP.L", "BRKB" = "BRK-B")
View(list)
test <- ishares_msci_world_top_10 %>%
mutate(test = recode(Emittententicker, list))
list <- as.list("BP." = "BP.L", "BRKB" = "BRK-B")
list <- as.list(c("BP." = "BP.L", "BRKB" = "BRK-B"))
View(list)
list[["BP."]]
test <- ishares_msci_world_top_10 %>%
mutate(test = recode(Emittententicker, list))
test <- ishares_msci_world_top_10 %>%
ungroup() %>%
mutate(test = recode(Emittententicker, list))
test <- ishares_msci_world_top_10 %>%
ungroup() %>%
mutate(test = recode(Emittententicker, "BP." = "BP.L"))
View(test)
level_key <- c("BP." = "BP.L", "BRKB" = "BRK-B")
level_key
test <- ishares_msci_world_top_10 %>%
ungroup() %>%
mutate(test = recode(Emittententicker, level_key))
test <- ishares_msci_world_top_10 %>%
ungroup() %>%
mutate(test = recode(Emittententicker, !!!level_key))
View(test)
!!!level_key
# Find tickers that do not work with yahoo.finance API
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker, Name) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"), keep = TRUE) %>%
filter(is.na(symbol))
missing_tickers
level_key <- c("BP." = "BP.L", "BRKB" = "BRK-B", "HSBA" = "HSBA.L", "SIE" = "SIE.DE",
"GLEN" = "GLEN.L", "4063" = "4063.T", "NESN" = "NESN.SW", "DGE" = "DGE.L",
"ULVR" = "ULVR.L", "IBE" = "IBE.MC", "ENEL" = "ENEL.MI", "NG." = "NG.L",
"7203" = "7203.T", "6758" = "6758.T")
ishares_msci_world_top_10 <- ishares_msci_world_top_10 %>%
ungroup() %>%
mutate(Emittententicker = recode(Emittententicker, !!!level_key))
# Query yahoo.finance API for q1 2022 data of single stocks
ishares_msci_world_top_10_price <-
tq_get(ishares_msci_world_top_10$Emittententicker,
get  = "stock.prices",
from = "2021-12-29",
to = "2022-03-26") %>%
group_by(symbol) %>%
tq_transmute(select     = adjusted,
mutate_fun = to.daily) %>%
group_by(symbol) %>%
mutate(adj_perc = round(adjusted/first(adjusted)-1, 3))
warnings()
# Find tickers that do not work with yahoo.finance API
missing_tickers <- ishares_msci_world_top_10 %>%
ungroup() %>%
select(Emittententicker, Name) %>%
left_join(ishares_msci_world_top_10_price %>% select(symbol) %>% distinct(), by = c("Emittententicker" = "symbol"), keep = TRUE) %>%
filter(is.na(symbol))
top_10_data <- ishares_msci_world_top_10_price %>%
group_by(symbol) %>%
filter(date == max(date)) %>%
ungroup() %>%
arrange(desc(adj_perc)) %>%
mutate(rank = row_number()) %>%
left_join(ishares_msci_world_top_10, by = c("symbol" = "Emittententicker")) %>%
mutate(Sektor = fct_reorder(Sektor, adj_perc, mean))
hovertext <-
c(
"<b>{Name}</b>
Sektor: {Sektor}
Performance: {round(adj_perc*100, 1)} %
Standort: {Standort}
Gewichtung im MSCI World: {`Gewichtung (%)`} %"
)
plot_ly() %>%
add_markers(
data = top_10_data[top_10_data$Sektor != "Energie",],
x = ~ rank,
y = ~ adj_perc,
color = ~ Sektor,
colors = gray.colors(9, rev = TRUE),
text = ~ symbol,
marker = list(size = 8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = top_10_data[top_10_data$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size = 8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
plot_ly() %>%
add_markers(
data = top_10_data[top_10_data$Sektor != "Energie",],
x = ~ rank,
y = ~ adj_perc,
color = ~ Sektor,
colors = gray.colors(9, rev = TRUE),
text = ~ symbol,
marker = list(size = 8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = top_10_data[top_10_data$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size = 8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE, dtick = 10),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
setwd("/Users/jan/blog/jantau/content/post/2022-03-26-energie-sektor")
partial_bundle(single_stocks) %>% saveWidget("single_stocks.html", selfcontained = FALSE, libdir = "lib")
single_stocks <-
plot_ly() %>%
add_markers(
data = top_10_data[top_10_data$Sektor != "Energie",],
x = ~ rank,
y = ~ adj_perc,
color = ~ Sektor,
colors = gray.colors(9, rev = TRUE),
text = ~ symbol,
marker = list(size = 8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_markers(
data = top_10_data[top_10_data$Sektor == "Energie",],
x = ~ rank,
y = ~ adj_perc,
name = "Energie",
marker = list(color = "blue", size = 8),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie</span> vs. der Rest
<span style='font-size:10pt'>Top-10 Werte pro Sektor (nach Marktkapitalisierung im MSCI World) im Q1 2022</span>"),
xaxis = list(title = FALSE, zeroline = FALSE, dtick = 10),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displayModeBar = FALSE)
partial_bundle(single_stocks) %>% saveWidget("single_stocks.html", selfcontained = FALSE, libdir = "lib")
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:10pt'>Sektoren-ETFs von Xtrackers MSCI World im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed"))
# Plot data
hovertext <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %"
)
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:10pt'>Sektoren-ETFs von Xtrackers MSCI World im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed"))
partial_bundle(sector_etfs) %>% saveWidget("sector_etfs.html", selfcontained = FALSE, libdir = "lib")
