y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12, opacity = 0.1,
line = list(color = "#000000", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 3)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
fig_openings <- plot_ly(colors = faang_colors) %>%
add_segments(
data = faang_data,
y = ~ quarter_year,
yend = ~ quarter_year,
x = ~ min,
xend = ~ max,
line = list(color = "grey", width = 2),
opacity = 0.7,
showlegend = FALSE,
hoverinfo = "skip"
) %>%
add_markers(
data = faang_data,
y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12, opacity = 0.1,
line = list(color = "#000000FF", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 3)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
partial_bundle(fig_openings) %>% saveWidget("faang_openings.html", selfcontained = FALSE, libdir = "lib")
fig_openings <- plot_ly(colors = faang_colors) %>%
add_segments(
data = faang_data,
y = ~ quarter_year,
yend = ~ quarter_year,
x = ~ min,
xend = ~ max,
line = list(color = "grey", width = 2),
opacity = 0.7,
showlegend = FALSE,
hoverinfo = "skip"
) %>%
add_markers(
data = faang_data,
y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12, opacity = 0.1,
line = list(color = "#00000080", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 3)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
fig_openings <- plot_ly(colors = faang_colors) %>%
add_segments(
data = faang_data,
y = ~ quarter_year,
yend = ~ quarter_year,
x = ~ min,
xend = ~ max,
line = list(color = "grey", width = 2),
opacity = 0.5,
showlegend = FALSE,
hoverinfo = "skip"
) %>%
add_markers(
data = faang_data,
y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12, opacity = 0.1,
line = list(color = "#000000", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 3)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
fig_openings <- plot_ly(colors = faang_colors) %>%
add_segments(
data = faang_data,
y = ~ quarter_year,
yend = ~ quarter_year,
x = ~ min,
xend = ~ max,
line = list(color = "grey", width = 2),
opacity = 0.1,
showlegend = FALSE,
hoverinfo = "skip"
) %>%
add_markers(
data = faang_data,
y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12, opacity = 0.1,
line = list(color = "#000000", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 3)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
fig_openings <- plot_ly(colors = faang_colors) %>%
add_segments(
data = faang_data,
y = ~ quarter_year,
yend = ~ quarter_year,
x = ~ min,
xend = ~ max,
line = list(color = "grey", width = 2),
opacity = 0.3,
showlegend = FALSE,
hoverinfo = "skip"
) %>%
add_markers(
data = faang_data,
y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12,
line = list(color = "#000000", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 3)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
fig_openings <- plot_ly(colors = faang_colors) %>%
add_segments(
data = faang_data,
y = ~ quarter_year,
yend = ~ quarter_year,
x = ~ min,
xend = ~ max,
line = list(color = "grey", width = 2),
opacity = 0.3,
showlegend = FALSE,
hoverinfo = "skip"
) %>%
add_markers(
data = faang_data,
y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12, opacity = 0.8,
line = list(color = "#000000", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 3)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
fig_openings <- plot_ly(colors = faang_colors) %>%
add_segments(
data = faang_data,
y = ~ quarter_year,
yend = ~ quarter_year,
x = ~ min,
xend = ~ max,
line = list(color = "grey", width = 2),
opacity = 0.3,
showlegend = FALSE,
hoverinfo = "skip"
) %>%
add_markers(
data = faang_data,
y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12, opacity = 0.8,
line = list(color = "#000000", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 4)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
partial_bundle(fig_openings) %>% saveWidget("faang_openings.html", selfcontained = FALSE, libdir = "lib")
fig_openings <- plot_ly(colors = faang_colors) %>%
add_segments(
data = faang_data,
y = ~ quarter_year,
yend = ~ quarter_year,
x = ~ min,
xend = ~ max,
line = list(color = "grey", width = 3),
opacity = 0.3,
showlegend = FALSE,
hoverinfo = "skip"
) %>%
add_markers(
data = faang_data,
y = ~ quarter_year,
x = ~ perc,
color = ~ as.factor(symbol),
#colors = faang_colors,
#size = 1,
#opacity = 0.1,
marker = list(size = 12, opacity = 0.8,
line = list(color = "#000000", width = 1, opacity = 1))
) %>%
add_trace(
data = faang_data_mean,
y = ~ quarter_year,
x = ~ mean,
type = 'scatter',
mode = 'line',
name = "Ø FAANG",
line = list(color = "black", width = 4)
) %>%
layout(title = list(text = "FAANG Openings nach Quartalsbericht"),
xaxis = list(title = FALSE, side = "top", tickformat = ",.1%",
anchor = "free", position = 0.97, zeroline = FALSE),
yaxis = list(title = list(text = "Quartal", standoff = 7L),
ticktext = text,
tickvals = vals),
legend = list(orientation = 'h', y = 0.02),
shapes = list(vline(0)),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig_openings
partial_bundle(fig_openings) %>% saveWidget("faang_openings.html", selfcontained = FALSE, libdir = "lib")
fig <- plot_ly(type = 'scatter', mode = 'lines') %>%
add_trace(x = ~d.fb$x, y = ~d.fb$y, fill = 'tozeroy', name = "FB", fillcolor = paste0(faang_colors[1], "40"), line = list(color = faang_colors[1])) %>%
add_trace(x = ~d.aapl$x, y = ~d.aapl$y, fill = 'tozeroy', name = "AAPL", fillcolor = paste0(faang_colors[2], "40"), line = list(color = faang_colors[2])) %>%
add_trace(x = ~d.amzn$x, y = ~d.amzn$y, fill = 'tozeroy', name = "AMZN", fillcolor = paste0(faang_colors[3], "40"), line = list(color = faang_colors[3]))%>%
add_trace(x = ~d.nflx$x, y = ~d.nflx$y, fill = 'tozeroy', name = "NFLX", fillcolor = paste0(faang_colors[4], "40"), line = list(color = faang_colors[4]))%>%
add_trace(x = ~d.goog$x, y = ~d.goog$y, fill = 'tozeroy', name = "GOOG", fillcolor = paste0(faang_colors[5], "40"), line = list(color = faang_colors[5])) %>%
layout(title = "Density-Plot",
xaxis= list(title = "Opening-Kurs nach Quartalsbericht", tickformat = ",.0%"),
yaxis = list(title = "Density"),
legend = list(orientation = 'h', y = 0.02)) %>%
config(displayModeBar = FALSE)
fig
fig <- plot_ly(type = 'scatter', mode = 'lines') %>%
add_trace(x = ~d.fb$x, y = ~d.fb$y, fill = 'tozeroy', name = "FB", fillcolor = paste0(faang_colors[1], "40"), line = list(color = faang_colors[1])) %>%
add_trace(x = ~d.aapl$x, y = ~d.aapl$y, fill = 'tozeroy', name = "AAPL", fillcolor = paste0(faang_colors[2], "40"), line = list(color = faang_colors[2])) %>%
add_trace(x = ~d.amzn$x, y = ~d.amzn$y, fill = 'tozeroy', name = "AMZN", fillcolor = paste0(faang_colors[3], "40"), line = list(color = faang_colors[3]))%>%
add_trace(x = ~d.nflx$x, y = ~d.nflx$y, fill = 'tozeroy', name = "NFLX", fillcolor = paste0(faang_colors[4], "40"), line = list(color = faang_colors[4]))%>%
add_trace(x = ~d.goog$x, y = ~d.goog$y, fill = 'tozeroy', name = "GOOG", fillcolor = paste0(faang_colors[5], "40"), line = list(color = faang_colors[5])) %>%
layout(title = "Density-Plot",
xaxis= list(title = "Opening-Kurs nach Quartalsbericht", tickformat = ",.0%"),
yaxis = list(title = "Density"),
legend = list(x = 0.8, y = 0.95)) %>%
config(displayModeBar = FALSE)
fig
fig <- plot_ly(type = 'scatter', mode = 'lines') %>%
add_trace(x = ~d.fb$x, y = ~d.fb$y, fill = 'tozeroy', name = "FB", fillcolor = paste0(faang_colors[1], "40"), line = list(color = faang_colors[1])) %>%
add_trace(x = ~d.aapl$x, y = ~d.aapl$y, fill = 'tozeroy', name = "AAPL", fillcolor = paste0(faang_colors[2], "40"), line = list(color = faang_colors[2])) %>%
add_trace(x = ~d.amzn$x, y = ~d.amzn$y, fill = 'tozeroy', name = "AMZN", fillcolor = paste0(faang_colors[3], "40"), line = list(color = faang_colors[3]))%>%
add_trace(x = ~d.nflx$x, y = ~d.nflx$y, fill = 'tozeroy', name = "NFLX", fillcolor = paste0(faang_colors[4], "40"), line = list(color = faang_colors[4]))%>%
add_trace(x = ~d.goog$x, y = ~d.goog$y, fill = 'tozeroy', name = "GOOG", fillcolor = paste0(faang_colors[5], "40"), line = list(color = faang_colors[5])) %>%
layout(title = "Density-Plot",
xaxis= list(title = "Opening-Kurs nach Quartalsbericht", tickformat = ",.0%",
showgrid = FALSE),
yaxis = list(title = "Density",
showgrid = FALSE),
legend = list(x = 0.8, y = 0.95)) %>%
config(displayModeBar = FALSE)
fig
partial_bundle(fig) %>% saveWidget("faang_density.html", selfcontained = FALSE, libdir = "lib")
fig <- plot_ly(type = 'scatter', mode = 'lines') %>%
add_trace(x = ~d.fb$x, y = ~d.fb$y, fill = 'tozeroy', name = "FB", fillcolor = paste0(faang_colors[1], "40"), line = list(color = faang_colors[1])) %>%
add_trace(x = ~d.aapl$x, y = ~d.aapl$y, fill = 'tozeroy', name = "AAPL", fillcolor = paste0(faang_colors[2], "40"), line = list(color = faang_colors[2])) %>%
add_trace(x = ~d.amzn$x, y = ~d.amzn$y, fill = 'tozeroy', name = "AMZN", fillcolor = paste0(faang_colors[3], "40"), line = list(color = faang_colors[3]))%>%
add_trace(x = ~d.nflx$x, y = ~d.nflx$y, fill = 'tozeroy', name = "NFLX", fillcolor = paste0(faang_colors[4], "40"), line = list(color = faang_colors[4]))%>%
add_trace(x = ~d.goog$x, y = ~d.goog$y, fill = 'tozeroy', name = "GOOG", fillcolor = paste0(faang_colors[5], "40"), line = list(color = faang_colors[5])) %>%
layout(title = "Density-Plot",
xaxis= list(title = "Opening-Kurs nach Quartalsbericht", tickformat = ",.0%",
showgrid = FALSE),
yaxis = list(title = "Density",
showgrid = FALSE),
legend = list(x = 0.8, y = 0.95),
hovermode = "y unified") %>%
config(displayModeBar = FALSE)
fig
fig <- plot_ly(type = 'scatter', mode = 'lines') %>%
add_trace(x = ~d.fb$x, y = ~d.fb$y, fill = 'tozeroy', name = "FB", fillcolor = paste0(faang_colors[1], "40"), line = list(color = faang_colors[1])) %>%
add_trace(x = ~d.aapl$x, y = ~d.aapl$y, fill = 'tozeroy', name = "AAPL", fillcolor = paste0(faang_colors[2], "40"), line = list(color = faang_colors[2])) %>%
add_trace(x = ~d.amzn$x, y = ~d.amzn$y, fill = 'tozeroy', name = "AMZN", fillcolor = paste0(faang_colors[3], "40"), line = list(color = faang_colors[3]))%>%
add_trace(x = ~d.nflx$x, y = ~d.nflx$y, fill = 'tozeroy', name = "NFLX", fillcolor = paste0(faang_colors[4], "40"), line = list(color = faang_colors[4]))%>%
add_trace(x = ~d.goog$x, y = ~d.goog$y, fill = 'tozeroy', name = "GOOG", fillcolor = paste0(faang_colors[5], "40"), line = list(color = faang_colors[5])) %>%
layout(title = "Density-Plot",
xaxis= list(title = "Opening-Kurs nach Quartalsbericht", tickformat = ",.0%",
showgrid = FALSE),
yaxis = list(title = "Density",
showgrid = FALSE),
legend = list(x = 0.8, y = 0.95),
hovermode = "x unified") %>%
config(displayModeBar = FALSE)
fig
test_2 <- faang_data %>%
group_by(quarter_year, symbol) %>%
summarise(mean = mean(perc, na.rm = TRUE)) %>%
group_by(symbol, group = cut(mean, breaks = seq(-0.01, 0.01, 0.02))) %>%
summarise(n = n())
View(test_2)
test_2 <- faang_data %>%
group_by(quarter_year) %>%
summarise(mean = mean(perc, na.rm = TRUE)) %>%
group_by(group = cut(mean, breaks = seq(-0.01, 0.01, 0.02))) %>%
summarise(n = n())
test_2 <- faang_data %>%
group_by(quarter_year, symbol) %>%
summarise(mean = mean(perc, na.rm = TRUE)) %>%
group_by(symbol, group = cut(mean, breaks = seq(-0.01, 0.01, 0.02))) %>%
summarise(n = n())
39*5
20/195
faang_mean <- faang_stock_daily_perc %>%
filter(date >= "2012-06-30" & date <= "2022-03-30") %>%
ungroup() %>%
summarise(mean = mean(perc, na.rm = TRUE), sd = sd(perc))
View(faang_mean)
faang_mean <- faang_stock_daily_perc %>%
filter(date >= "2012-06-30" & date <= "2022-03-30") %>%
ungroup() %>%
summarise(mean = mean(perc, na.rm = TRUE) * 100, sd = sd(perc) * 100)
earnings_days <- faang_data %>% distinct(date) %>% drop_na() %>% pull(date)
faang_mean <- faang_stock_daily_perc %>%
filter(date >= "2012-06-30" & date <= "2022-03-30")
faang_mean <- faang_stock_daily_perc %>%
filter(date >= "2012-06-30" & date <= "2022-03-30") %>%
filter(!date %in% earnings_days)
faang_mean <- faang_stock_daily_perc %>%
filter(date >= "2012-06-30" & date <= "2022-03-30") %>%
ungroup() %>%
summarise(mean = mean(perc, na.rm = TRUE) * 100, sd = sd(perc) * 100)
faang_mean_wo_earnings <- faang_stock_daily_perc %>%
filter(date >= "2012-06-30" & date <= "2022-03-30") %>%
filter(!date %in% earnings_days) %>%
ungroup() %>%
summarise(mean = mean(perc, na.rm = TRUE) * 100, sd = sd(perc) * 100)
View(faang_mean_wo_earnings)
test_2 <- faang_data %>%
group_by(quarter_year) %>%
summarise(mean = mean(perc, na.rm = TRUE)) %>%
group_by(group = cut(mean, breaks = seq(-0.015, 0.015, 0.03))) %>%
summarise(n = n())
View(test_2)
test_2 <- faang_data %>%
group_by(quarter_year, symbol) %>%
summarise(mean = mean(perc, na.rm = TRUE)) %>%
group_by(symbol, group = cut(mean, breaks = seq(-0.015, 0.015, 0.03))) %>%
summarise(n = n())
View(test_2)
View(faang_data_mean)
faang_earnings_mean <- faang_data %>%
summarise(mean = mean(perc, na.rm = TRUE))
View(faang_earnings_mean)
faang_earnings_mean <- faang_data %>%
summarise(mean = mean(perc, na.rm = TRUE) * 100, sd = sd(perc, na.rm = TRUE) * 100)
1.36+835
1.36+8.35
1.36-8.35
38(195)
38/195
blogdown:::preview_site()
