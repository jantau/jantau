color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext1)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>")
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
sector_etfs
# Plot data
hovertext1 <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{date}"
)
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext1)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>")
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
sector_etfs
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext1)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
# hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>"),
hovertext = ~ str_glue(hovertext1)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
sector_etfs
# Plot data
hovertext1 <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{format(date, ) '%d. %B %Y'}"
)
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext1)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
# hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>"),
hovertext = ~ str_glue(hovertext1)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
# Plot data
hovertext1 <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{format(date, '%d. %B %Y')}"
)
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext1)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
# hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>"),
hovertext = ~ str_glue(hovertext1)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
# Plot data
hovertext1 <-
str_glue(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{format(date, '%d. %B %Y')}"
)
# Plot data
hovertext1 <-
str_glue(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{format(date, '%d. %B %Y')}"
)
# Plot data
hovertext1 <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{format(date, '%d. %B %Y')}"
)
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ hovertext1
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
# hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>"),
hovertext = ~ str_glue(hovertext1)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
# Plot data
hovertext1 <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{format(date, '%d. %B %Y')}"
)
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext1)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
# hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>"),
hovertext = ~ str_glue(hovertext1)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
sector_etfs
# Plot data
hovertext1 <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{format(date, '%d. %b %Y')}"
)
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext1)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
# hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>"),
hovertext = ~ str_glue(hovertext1)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
sector_etfs
# Plot data
hovertext1 <-
c(
"<b>{etf_name}</b>
Performance: {round(adj_perc*100, 1)} %
{format(date, '%d. %b. %Y')}"
)
sector_etfs <-
plot_ly() %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name != "Energy",],
x = ~ date,
y = ~ adj_perc,
color = ~ etf_name,
colors = gray.colors(9, rev = TRUE),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext1)
) %>%
add_lines(
data = xtracker_q1_2022[xtracker_q1_2022$etf_name == "Energy",],
x = ~ date,
y = ~ adj_perc,
name = "Energy",
line = list(color = "blue"),
hoverinfo = "text",
# hovertemplate = paste("<b>Energy</b><br>Performance: %{y}<extra></extra>"),
hovertext = ~ str_glue(hovertext1)
) %>%
layout(title = glue::glue("<span style='color: blue'>Energie-Sektor</span> vs. der Rest
<span style='font-size:8pt'>Sektoren-ETFs von Xtrackers MSCI World
im 1. Quartal 2022</span>"),
xaxis = list(title = FALSE),
yaxis = list(title = "Performance Q1 2022", tickformat = ".0%"),
legend = list(orientation = "h", traceorder = "reversed")) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("hoverClosestCartesian"), list("hoverCompareCartesian"), list("resetScale2d")))
sector_etfs
partial_bundle(sector_etfs) %>% saveWidget("sector_etfs.html", selfcontained = FALSE, libdir = "lib")
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
filter(date == max(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev)) %>%
# arrange(desc(Sektor)) %>%
plot_ly(x = ~Sektor,
y = ~sum,
marker = list(color = c(gray.colors(10, rev = TRUE), "blue")),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_bars() %>%
layout(title = "Sektoren-Gewichtung im MSCI World<br><span style='font-size:8pt'>Top-10-Werte pro Sektor (nach Marktkap.)</span>",
yaxis = list(title = "Gewichtung der Top-10-Aktien", ticksuffix = "%", zeroline = FALSE)) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("resetScale2d")))
source("/Users/jan/blog/jantau/content/post/header.R")
setwd("/Users/jan/blog/jantau/content/post/2022-03-26-energie-sektor")
hovertext <-
c(
"<b>{Sektor}</b>
Gewichtung: {sum} %"
)
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
filter(date == max(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev)) %>%
# arrange(desc(Sektor)) %>%
plot_ly(x = ~Sektor,
y = ~sum,
marker = list(color = c(gray.colors(10, rev = TRUE), "blue")),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_bars() %>%
layout(title = "Sektoren-Gewichtung im MSCI World<br><span style='font-size:8pt'>Top-10-Werte pro Sektor (nach Marktkap.)</span>",
yaxis = list(title = "Gewichtung der Top-10-Aktien", ticksuffix = "%", zeroline = FALSE)) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("resetScale2d")))
sector_weight
# Join data
top_10_data <- ishares_msci_world_top_10_price %>%
group_by(symbol) %>%
filter(date == max(date)) %>%
ungroup() %>%
arrange(desc(adj_perc)) %>%
mutate(rank = row_number()) %>%
left_join(ishares_msci_world_top_10, by = c("symbol" = "Emittententicker")) %>%
mutate(Sektor = fct_reorder(Sektor, adj_perc, mean))
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
filter(date == max(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev)) %>%
# arrange(desc(Sektor)) %>%
plot_ly(x = ~Sektor,
y = ~sum,
marker = list(color = c(gray.colors(10, rev = TRUE), "blue")),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_bars() %>%
layout(title = "Sektoren-Gewichtung im MSCI World<br><span style='font-size:8pt'>Top-10-Werte pro Sektor (nach Marktkap.)</span>",
yaxis = list(title = "Gewichtung der Top-10-Aktien", ticksuffix = "%", zeroline = FALSE)) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("resetScale2d")))
sector_weight
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
filter(date == max(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev))
sector_weight
sum(sector_weight$sum)
top_10_data
View(top_10_data)
top_10_data %>%
group_by(Sektor) %>%
filter(date == max(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc))
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
filter(date == last(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev)) %>%
# arrange(desc(Sektor)) %>%
plot_ly(x = ~Sektor,
y = ~sum,
marker = list(color = c(gray.colors(10, rev = TRUE), "blue")),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_bars() %>%
layout(title = "Sektoren-Gewichtung im MSCI World<br><span style='font-size:8pt'>Top-10-Werte pro Sektor (nach Marktkap.)</span>",
yaxis = list(title = "Gewichtung der Top-10-Aktien", ticksuffix = "%", zeroline = FALSE)) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("resetScale2d")))
top_10_data %>%
group_by(Sektor) %>%
filter(date == last(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev))
sum(sector_weight$sum)
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
filter(date == last(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev))
sum(sector_weight$sum)
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
filter(date == last(date)) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev)) %>%
# arrange(desc(Sektor)) %>%
plot_ly(x = ~Sektor,
y = ~sum,
marker = list(color = c(gray.colors(10, rev = TRUE), "blue")),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_bars() %>%
layout(title = "Sektoren-Gewichtung im MSCI World<br><span style='font-size:8pt'>Top-10-Werte pro Sektor (nach Marktkap.)</span>",
yaxis = list(title = "Gewichtung der Top-10-Aktien", ticksuffix = "%", zeroline = FALSE)) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("resetScale2d")))
#sum(sector_weight$sum)
sector_weight
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
filter(date == last(date))
View(sector_weight)
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
sector_weight <-
top_10_data %>%
group_by(Sektor)
sector_weight <-
top_10_data %>%
group_by(Sektor)
View(top_10_data)
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev)) %>%
# arrange(desc(Sektor)) %>%
plot_ly(x = ~Sektor,
y = ~sum,
marker = list(color = c(gray.colors(10, rev = TRUE), "blue")),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_bars() %>%
layout(title = "Sektoren-Gewichtung im MSCI World<br><span style='font-size:8pt'>Top-10-Werte pro Sektor (nach Marktkap.)</span>",
yaxis = list(title = "Gewichtung der Top-10-Aktien", ticksuffix = "%", zeroline = FALSE)) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("resetScale2d")))
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev))
sum(sector_weight$sum)
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev)) %>%
# arrange(desc(Sektor)) %>%
plot_ly(x = ~Sektor,
y = ~sum,
marker = list(color = c(gray.colors(10, rev = TRUE), "blue")),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_bars() %>%
layout(title = "Sektoren-Gewichtung im MSCI World<br><span style='font-size:8pt'>Top-10-Werte pro Sektor (nach Marktkap.)</span>",
yaxis = list(title = "Gewichtung der Top-10-Aktien", ticksuffix = "%", zeroline = FALSE)) %>%
config(displaylogo = FALSE, modeBarButtons = list(list("resetScale2d")))
#sum(sector_weight$sum)
sector_weight
sector_weight <-
top_10_data %>%
group_by(Sektor) %>%
summarise(sum = sum(`Gewichtung (%)`), perc = mean(adj_perc)) %>%
mutate(Sektor = fct_relevel(Sektor, rev)) %>%
# arrange(desc(Sektor)) %>%
plot_ly(x = ~Sektor,
y = ~sum,
marker = list(color = c(gray.colors(10, rev = TRUE), "blue")),
hoverinfo = "text",
hovertext = ~ str_glue(hovertext)) %>%
add_bars() %>%
layout(title = "Sektoren-Gewichtung im MSCI World<br><span style='font-size:8pt'>Top-10-Werte pro Sektor (nach Marktkap.)</span>",
yaxis = list(title = "Gewichtung der Top-10-Aktien", ticksuffix = "%", zeroline = FALSE)) %>%
config(displayModeBar = FALSE)
#sum(sector_weight$sum)
sector_weight
partial_bundle(sector_weight) %>% saveWidget("sector_weight.html", selfcontained = FALSE, libdir = "lib")
